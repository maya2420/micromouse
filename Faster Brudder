#include <AccelStepper.h>
//const int stepsPerRev= 200;
AccelStepper mystepperLeft(1, 5, 4);
AccelStepper mystepperRight(1, 8, 7);


int SR = 0, FR = 0, FL = 0, SL = 0;

int cruiseR = 1000;
int cruiseL = 1000;
int cruise = 1000;

unsigned long lasttime = 0;

void goStraight(void);            //.235mm per step
void turnLeft(void);              //764 steps is 180mm traveled in strait line
void turnRight(void);              //382 is 90mm distance
void oneeightyRight(void);
void oneeightyLeft(void);
void unfuck(void);
void stop(void);

//Adjustments can made via small tail-fin manuever,
//by individualy changing single motor accell or speed

void setup() {
  // put your setup code here, to run once:
  mystepperLeft.setMaxSpeed(cruise);
  mystepperLeft.setAcceleration(4000);  //getting up to setMax speed
  mystepperLeft.setCurrentPosition(0);


  mystepperRight.setMaxSpeed(cruise);
  mystepperRight.setAcceleration(4000);
  mystepperRight.setCurrentPosition(0);

  pinMode(9, OUTPUT);     //this pin is M1, used to configure modes for fractional steps
  pinMode(10, OUTPUT);    //this pin is M2, used to configure modes for fractional steps
  digitalWrite(9, HIGH);  //We use this to make half-steps
  digitalWrite(10, LOW);  //Must be turned off to make half-steps

  pinMode(A0, INPUT);
  pinMode(A1, INPUT);
  pinMode(A2, INPUT);
  pinMode(A3, INPUT);
}

void loop() {
  // put your main code here, to run repeatedly:
  SR = analogRead(A0);
  FR = analogRead(A1);
  FL = analogRead(A2);
  SL = analogRead(A3);

  if (FR > 950 || FL > 950) {
    goStraight();
  } else if (SR > 950) {
    turnRight();
  } else if (SL > 950) {
    turnLeft();
  } else if (FR < 950 && FL < 950 && SR < 950 && SL < 950) {
    if (SR > SL) {
      oneeightyRight();
    }
    if (SL > SR) {
      oneeightyLeft();
    }
  }
}

void turnLeft(void) {

  mystepperRight.move(490);

  while (mystepperLeft.distanceToGo() > 0 || mystepperRight.distanceToGo() > 0) {
    mystepperRight.run();
  }
}


void turnRight(void) {


  mystepperLeft.move(490);

  while (mystepperLeft.distanceToGo() > 0 || mystepperRight.distanceToGo() > 0) {
    mystepperLeft.run();
  }
}



void goStraight(void) {

  mystepperLeft.move(12224);
  mystepperRight.move(12224);

  while (mystepperLeft.distanceToGo() > 0 || mystepperRight.distanceToGo() > 0) {
    // Run the stepper motors towards their set positions
    mystepperLeft.run();
    mystepperRight.run();
    SR = analogRead(A0);
    FR = analogRead(A1);
    FL = analogRead(A2);
    SL = analogRead(A3);

    unfuck();

    if (FR < 950 || FL < 950) {
      stop();
      break;
    }
  }
}
void oneeightyRight(void) {

  //mystepperRight.setAcceleration(4000);
  //mystepperLeft.setAcceleration(4000);

  mystepperRight.setCurrentPosition(0);
  mystepperLeft.setCurrentPosition(0);

  mystepperLeft.moveTo(480);
  mystepperRight.moveTo(-480);


  while ((mystepperLeft.distanceToGo() > 0) || mystepperRight.distanceToGo() > 0) {
    mystepperLeft.run();
    mystepperRight.run();
  }
  //mystepperRight.setAcceleration(8000);
  //mystepperLeft.setAcceleration(8000);
}
void oneeightyLeft(void) {

  //mystepperRight.setAcceleration(4000);
  //mystepperLeft.setAcceleration(4000);

  mystepperRight.setCurrentPosition(0);
  mystepperLeft.setCurrentPosition(0);

  mystepperLeft.moveTo(-480);
  mystepperRight.moveTo(480);


  while ((mystepperLeft.distanceToGo() > 0) || mystepperRight.distanceToGo() > 0) {
    mystepperLeft.run();
    mystepperRight.run();
  }
  //mystepperRight.setAcceleration(4000);
  //mystepperLeft.setAcceleration(4000);
}
void unfuck(void) {
  if (millis() - lasttime > 1) {
    lasttime = millis();
    if (SL < 800) {
      cruiseL = cruise - SL + 800;
      mystepperLeft.setMaxSpeed(cruiseL);
    }
    if (SR < 800) {
      cruiseR = cruise - SR + 800;
      mystepperRight.setMaxSpeed(cruiseR);
    }
  }
}
void stop(void) {
  mystepperLeft.move(250);
  mystepperRight.move(250);
  while (mystepperLeft.distanceToGo() > 0 || mystepperRight.distanceToGo() > 0) {
    // Run the stepper motors towards their set positions
    mystepperLeft.run();
    mystepperRight.run();
  }
  cruiseL = cruise;
  cruiseR = cruise;
  mystepperLeft.setMaxSpeed(cruise);
  mystepperRight.setMaxSpeed(cruise);
}
